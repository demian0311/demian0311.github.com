<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Demian Neidetcher</title>
    <description>I&#39;m a software engineer, primarily working with JVM languages and in the telecommunications domain.
</description>
    <link>http://neidetcher.com/</link>
    <atom:link href="http://neidetcher.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 18 Feb 2016 07:41:56 -0600</pubDate>
    <lastBuildDate>Thu, 18 Feb 2016 07:41:56 -0600</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Log The Stack In Java</title>
        <description>&lt;p&gt;Sometimes a method is executed and you&amp;#39;re just not sure how you got there.  You could bump up logging or
set a breakpoint but just logging the contents of the call stack is another good option.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logStack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;logging stack at [{}]&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ste&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ste&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;com.exmple&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ste&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{} - ste: {}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ste&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We skip the first 2 elements of the stack because that contains where we called logStack from and
the current location.  It&amp;#39;s optional but I like to filter to just include classes that start with
our package name.&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Feb 2016 00:00:00 -0600</pubDate>
        <link>http://neidetcher.com/programming/2016/02/18/log-the-stack-in-java.html</link>
        <guid isPermaLink="true">http://neidetcher.com/programming/2016/02/18/log-the-stack-in-java.html</guid>
        
        <category>programming</category>
        
        <category>java</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Entering Amateur Radio</title>
        <description>&lt;p&gt;When I was in the Marines I remember a European NGO worker (I think 
he was with &lt;a href=&quot;https://www.icrc.org/&quot;&gt;ICRC&lt;/a&gt;) had a radio setup such that 
he could communicate around the world.  That seemed interesting at 
the time.  I don&amp;#39;t remember if he used it to conduct NGO business or
just communicate with people back home while he was in in remote parts 
of Africa.&lt;/p&gt;

&lt;p&gt;Recently the local amateur radio club, &lt;a href=&quot;http://www.w5ddl.org/&quot;&gt;Acadiana Amateur Radio 
Association&lt;/a&gt;, was generous enough to conduct 
&lt;a href=&quot;http://theadvocate.com/news/acadiana/14385399-123/lafayette-class-helps-ham-radio-enthusiasts-learn-about-hobby-prepare-for-licensing&quot;&gt;free training&lt;/a&gt; at the &lt;a href=&quot;http://www.lafayettesciencemuseum.org/&quot;&gt;Lafayette 
Science Museum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I guess I should also out myself as something of a prepper.  You get
accidental death and dismemberment insurance because there&amp;#39;s a remote
chance something bad will happen.  In the same sense you can have
interests that are fun but also prepare you if there is an emergency
at a local or national level.  I think amateur radio is one of those
interests.  Knowing what I know now about amateur radio I would want
a capable HAM in my fortified zombie-proof compound.&lt;/p&gt;

&lt;p&gt;I decided to go and I brought along my son Ryder.  The classes were
great, a good mix of general topics to get us engaged in HAM radio
and test preparation.&lt;/p&gt;

&lt;h2&gt;Getting Certified&lt;/h2&gt;

&lt;p&gt;The FCC allows citizens to use portions of the radio spectrum for
personal use.  To prevent the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tragedy_of_the_commons&quot;&gt;tragedy of the commons&lt;/a&gt; the FCC requires
that citizens be licensed to use that spectrum.&lt;/p&gt;

&lt;p&gt;There are 3 amateur radio licenses.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Technician&lt;/strong&gt; lets you talk around town and possibly within the state&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;General&lt;/strong&gt; lets you talk nationally and possibly even all over the world&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Extra&lt;/strong&gt; frees up more of the spectrum to do more of the same&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Gordo&amp;#39;s Books&lt;/h3&gt;

&lt;p&gt;Besides the class I read through the &lt;a href=&quot;http://www.gordonwestradioschool.com/&quot;&gt;Gordon West&lt;/a&gt; books 
to prepare.  The books
are high quality, good paper, good color.  He has a good approach I think, he
co-locates the content with the questions and answers.  The dimensions of the
book make it easier to bring with you as you run errands so that if you have
a spare moment you can study.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Technician-2014-18-Element-License-Preparation/dp/0945053797/ref=sr_1_1?ie=UTF8&amp;amp;qid=1453213371&amp;amp;sr=8-1&amp;amp;keywords=gordon+west&quot;&gt;Technician Class 2014-18&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/General-Class-2015-2019-Gordon-West/dp/0945053827/ref=sr_1_2?ie=UTF8&amp;amp;qid=1453213505&amp;amp;sr=8-2&amp;amp;keywords=gordon+west&quot;&gt;General Class 2015-2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Studying and Practice Testing&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://hamstudy.org/&quot;&gt;hamstudy.org&lt;/a&gt; was another invaluable resource to
prepare.  The only downside is that you need Internet connectivity to 
study.  The site seems to be smart about what it puts in front of you, 
as the learner your main mission is to chug through it until you&amp;#39;re at around
85% so that you can surely pass the tests.&lt;/p&gt;

&lt;p&gt;One thing I learned too late was that you can go into specific sections
of the test that you have trouble with.  This lets you focus on those questions
and see them more often.  I don&amp;#39;t think it&amp;#39;s the only way to go but perhaps it&amp;#39;s
good to mix it up like that.&lt;/p&gt;

&lt;h3&gt;My Suggestions&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;#39;t peak too early, I did and I had to keep studying for a couple weeks to
retain.  Give yourself 2 or 3 weeks and go for it.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t focus too much on the formulas.  I know the formulas and I get them but
I just memorized the answers.&lt;/li&gt;
&lt;li&gt;Unit conversion (like from kHz to MHz) moves 3 decimal places, exclude answers that do not fit that.&lt;/li&gt;
&lt;li&gt;Except for decibels the math is always either multiplication or division, knowing
the right answer fits that will get you far.&lt;/li&gt;
&lt;li&gt;Always end transmissions with your call sign.&lt;/li&gt;
&lt;li&gt;Always err on being safe.&lt;/li&gt;
&lt;li&gt;Always err on being nice. &lt;/li&gt;
&lt;li&gt;Mnemonics.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To elaborate on the mnemonics, here are a couple that get me through 6 or so of the
answers.  If you&amp;#39;ve been through the questions you know how it helps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There&amp;#39;s a duck in a field with a magnet in his mouth, he has a chain around his 
neck and it says &amp;quot;Henry&amp;quot;, he flies up and from the side his lips look like an inductor schematic.&lt;/li&gt;
&lt;li&gt;There&amp;#39;s an Arab guy named Farad in a field wearing a cap with a lightning bolt on it, the
top of his cap looks like a capacitor schematic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Testing&lt;/h3&gt;

&lt;p&gt;Before their monthly meeting the local amateur radio club holds tests conducted by 
trained volunteers.  You can take as many tests as you would like for $15 but if you 
fail a test and want to re-take it you have to pay another $15.  I was able to take
both the technician and the general tests.  I did alright on the technician, for the 
general I was unsure but they told me I passed.  They asked if I wanted to go for
extra but I didn&amp;#39;t want to waste their time.  All the volunteers were awesome and helpful.&lt;/p&gt;

&lt;h2&gt;Call Sign&lt;/h2&gt;

&lt;p&gt;A week after testing I looked up my name with the FCC.  I was assigned the call sign
&lt;strong&gt;KG5KZM&lt;/strong&gt;.  Not too bad but I decided to apply for a vanity call sign right 
away.  Just like vanity plates for your car you can try to get a call sign of 
your choosing as long as it&amp;#39;s available.  It also has to be the right format for 
your license.&lt;/p&gt;

&lt;p&gt;You pick a dozen or so call signs you would like in priority order, wait 18 days and
find out what you got.  I chose a bunch of variations on X9DLN to have my initials.
Not very creative but seems easy to remember.&lt;/p&gt;

&lt;h2&gt;What&amp;#39;s Next&lt;/h2&gt;

&lt;p&gt;We have to see if my son Ryder can pass for technician.  He&amp;#39;s slowly getting there.&lt;/p&gt;

&lt;p&gt;I have some hand-held radios that you&amp;#39;d use for local communication.  I&amp;#39;d like to get
into pack portable HF on battery and solar, lots to learn.  If I get up to speed I 
might look into &lt;a href=&quot;http://www.arrl.org/ares&quot;&gt;ARES&lt;/a&gt; to be helpful in emergencies.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Jan 2016 00:00:00 -0600</pubDate>
        <link>http://neidetcher.com/ham/2016/01/19/entering-amateur-radio.html</link>
        <guid isPermaLink="true">http://neidetcher.com/ham/2016/01/19/entering-amateur-radio.html</guid>
        
        <category>ham</category>
        
        
        <category>ham</category>
        
      </item>
    
      <item>
        <title>Checkstyle Suppressions</title>
        <description>&lt;p&gt;I have recently focused on build tools that help keep code clean.  In &lt;a href=&quot;http://gradle.org/&quot;&gt;gradle&lt;/a&gt; I use
&lt;a href=&quot;https://pmd.github.io/&quot;&gt;PMD&lt;/a&gt;, &lt;a href=&quot;http://findbugs.sourceforge.net/&quot;&gt;findbugs&lt;/a&gt; and &lt;a href=&quot;http://checkstyle.sourceforge.net/&quot;&gt;checkstyle&lt;/a&gt;.  Probably about 50% of the time I check in code these
tools catch something bad I was attempting to do.  They have proven their worth.&lt;/p&gt;

&lt;p&gt;I run into a problem though with beans where the equals that IntelliJ generates trips 
complexity warnings in checkstyle.  Running a &lt;code&gt;./gradlew check&lt;/code&gt; gives me an error 
that looks like this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;:checkstyleMain
[ant:checkstyle] ./bar/src/main/java/com/example/foo/model/Thing.java:33:5: NPath Complexity is 48 (max allowed is 20).
:checkstyleMain FAILED
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the past I have refactored and teased apart this generated code but I finally came
to the conclusion that I wasn&amp;#39;t adding any value in that effort.&lt;/p&gt;

&lt;p&gt;What I want is an unintrusive way to ignore that check for everything in a given path.
I stick my beans in a &lt;code&gt;model&lt;/code&gt; package so this isn&amp;#39;t too hard to suppress.&lt;/p&gt;

&lt;h2&gt;Create a Suppressions File&lt;/h2&gt;

&lt;p&gt;In my project I have &lt;code&gt;./config/checkstyle/checkstyle.xml&lt;/code&gt; already.  I&amp;#39;m going to 
create a file in the same directory called &lt;code&gt;checkstyle-suppressions.xml&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE suppressions PUBLIC&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;        &amp;quot;-//Puppy Crawl//DTD Suppressions 1.0//EN&amp;quot;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;        &amp;quot;http://www.puppycrawl.com/dtds/suppressions_1_0.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;suppressions&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;suppress&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checks=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;NPathComplexity&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;files=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;.*\/model\/.*&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/suppressions&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Reference the Suppressions File&lt;/h2&gt;

&lt;p&gt;In my &lt;code&gt;./config/checkstyle/checkstyle.xml&lt;/code&gt; I have this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE module PUBLIC&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;        &amp;quot;-//Puppy Crawl//DTD Check Configuration 1.3//EN&amp;quot;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;        &amp;quot;http://www.puppycrawl.com/dtds/configuration_1_3.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Checker&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;SuppressionFilter&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;./config/checkstyle/checkstyle-suppressions.xml&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Thu, 10 Dec 2015 00:00:00 -0600</pubDate>
        <link>http://neidetcher.com/programming/2015/12/10/checkstyle-suppressions.html</link>
        <guid isPermaLink="true">http://neidetcher.com/programming/2015/12/10/checkstyle-suppressions.html</guid>
        
        <category>programming</category>
        
        <category>java8</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Spring Mvc Exception Handler</title>
        <description>&lt;p&gt;This is probably so obvious that it doesn&amp;#39;t deserve a blog post by anyone
but I&amp;#39;ll admit that I struggled with this for a few hours.  I have an API 
that I am putting together for a &lt;a href=&quot;http://martinfowler.com/articles/microservices.html&quot;&gt;microservice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a little JSON API and SpringMVC makes it very easy.  But when there
are exceptions most of the guides I found send you towards a &lt;a href=&quot;http://www.thymeleaf.org/&quot;&gt;Thymeleaf&lt;/a&gt; solution
that outputs HTML.  That&amp;#39;s not what I want, I want a good HTTP response code
and a JSON response that the client can parse to help them figure out what
went wrong.  There&amp;#39;s a great write-up on &lt;a href=&quot;https://spring.io/blog/2013/11/01/exception-handling-in-spring-mvc&quot;&gt;exception handling in Spring&lt;/a&gt; but that, I believe, takes you in the Thymeleaf direction as well.&lt;/p&gt;

&lt;h2&gt;My Custom Exception&lt;/h2&gt;

&lt;p&gt;Maybe this has my code too tied to HTTP but I like the explicit nature.  Notice
the &lt;code&gt;ResponseStatus&lt;/code&gt; annotation that provides what &lt;code&gt;HttpStatus&lt;/code&gt; we want associated
with this exception.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package foo.bar;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ResponseStatus;

@ResponseStatus(value = HttpStatus.BAD_REQUEST)
public class BadRequestException extends RuntimeException {

    public BadRequestException(String messageIn) {
        super(messageIn);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Using the Exception&lt;/h2&gt;

&lt;p&gt;Nothing shocking here.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;throw new BadRequestException(&amp;quot;something descriptive goes here&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;ExceptionHandler&lt;/h2&gt;

&lt;p&gt;Spring lets you just annotate a method on a controller that you have designated to 
handle exceptions.  So yeah, this is the part that wasn&amp;#39;t obvious to me.  Sending 
back a &lt;code&gt;Map&lt;/code&gt; tells Spring to just turn it into good JSON.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;exceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletResponseIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// if not production then show stack trace?&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;StringBuffer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queryString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQueryString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;requestUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isAnnotationPresent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ResponseStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;httpStatus&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;httpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getReasonPhrase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;httpServletResponseIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This all produces JSON that looks like this along with an HTTP response code of 400.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;requestUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost:8080/controller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;httpStatus&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bad Request&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;something descriptive goes here&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Wed, 19 Aug 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/programming/2015/08/19/spring-mvc-exception-handler.html</link>
        <guid isPermaLink="true">http://neidetcher.com/programming/2015/08/19/spring-mvc-exception-handler.html</guid>
        
        <category>programming</category>
        
        <category>java8</category>
        
        <category>spring</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Seattle</title>
        <description>&lt;p&gt;After driving up the &lt;a href=&quot;/2015/07/20/pacific-coast-of-oregon.html&quot;&gt;Pacific Coast of Oregon&lt;/a&gt; and before going
to &lt;a href=&quot;/2015/07/24/oscon-2015.html&quot;&gt;OSCON in Portland&lt;/a&gt; we took a few days to see Seattle.&lt;/p&gt;

&lt;p&gt;Once we got settled in the room we drove downtown to catch a ferry ride 
to &lt;a href=&quot;http://www.argosycruises.com/tillicum-village/&quot;&gt;Tillicum Village&lt;/a&gt;.  Once
we got off the ferry they gave us a mug of steamed clams.  I nibbled on a bit, Ryder liked
them a lot.  After that you make your way to have a nice dinner of smoked salmon.  I
generally don&amp;#39;t like fish but I tried the salmon, it was good, I can see the appeal.  Then
they put on a show of dances and talk about local native American mythology.  After that 
you hang out and get back on the boats.&lt;/p&gt;

&lt;p&gt;The next day we drove down to &lt;a href=&quot;http://www.pikeplacemarket.org/&quot;&gt;Pike Place Market&lt;/a&gt;.  That&amp;#39;s where 
the fish market is.  We walked through that, it was crowded and touristy.  The fish mongers 
were nice, great ambassadors to the city.  We also went to 
the first Starbucks.  No video of that, the only thing different between that and other Starbucks
is that the line took 40 minutes instead of 10 minutes.&lt;/p&gt;

&lt;p&gt;Then we went to the Seattle &lt;a href=&quot;http://www.empmuseum.org/&quot;&gt;EMP Museum&lt;/a&gt;.  I guess
you could say it&amp;#39;s a museum dedicated to contemporary culture.  There was a Star Wars costume 
exibit with many original costumes from the movies.&lt;/p&gt;

&lt;p&gt;Besides that there was an exhibit on indy games.  I&amp;#39;m not much of a gamer but it was fun to
see the visual things indy game creators are doing.  The kids had fun playing the games.&lt;/p&gt;

&lt;p&gt;Then we went up the &lt;a href=&quot;http://www.spaceneedle.com/&quot;&gt;Space Needle&lt;/a&gt;.  It was confusing, 
we tried to get tickets and they said
they were sold out until 10PM.  Courtney managed to ask around and get reservations for the 
restaurant up there almost immediately and after you eat you can hang around on the observation
deck.  So it worked out great, the restaurant spins around once every 50 minutes.&lt;/p&gt;

&lt;p&gt;Finally on our way to Portland we stopped off at &lt;a href=&quot;http://crystalmountainresort.com/summer/summer-activities/scenic-gondola-rides/&quot;&gt;Crystal Mountain&lt;/a&gt; to 
take a gondola ride up for a view of Mt Rainier and Mt St Helens.  We had lunch at a nice restaurant
at the top of the life and took in the views, great detour.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; 
src=&quot;https://www.youtube.com/embed/LEPHH8ZndYo&quot; 
frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 25 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/25/seattle.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/25/seattle.html</guid>
        
        
      </item>
    
      <item>
        <title>Oscon 2015</title>
        <description>&lt;p&gt;I went to &lt;a href=&quot;http://www.oscon.com/&quot;&gt;OSCON&lt;/a&gt; this year.  It&amp;#39;s a conference for opensource put 
on by &lt;a href=&quot;http://www.oreilly.com/&quot;&gt;O&amp;#39;Reilly&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Kids Day&lt;/h2&gt;

&lt;p&gt;I took my 17 year old son, Caden and my 8 year old son Ryder.  &lt;/p&gt;

&lt;h3&gt;Python&lt;/h3&gt;

&lt;p&gt;The first session was on
Python.  Python is a great language to start out with.  I like Python a lot, it was the
first language I used professionall after COBOL.  They had a good curriculum set up for 
us.  We did a series of games where we accepted input, tried to guess a number and 
whatnot.  Ryder had lots of fun playing the game.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;float: right&quot; src=&quot;https://i.imgur.com/wIFL6Vxm.jpg&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Modding Minecraft&lt;/h3&gt;

&lt;p&gt;The second session was modding &lt;a href=&quot;https://minecraft.net/&quot;&gt;Minecraft&lt;/a&gt; 
with &lt;a href=&quot;http://files.minecraftforge.net/&quot;&gt;Forge&lt;/a&gt;.  We don&amp;#39;t run Minecraft at home yet, we
probably will in the next year.  Minecraft is written in Java and the 
author, &lt;a href=&quot;https://en.wikipedia.org/wiki/Markus_Persson&quot;&gt;Notch&lt;/a&gt;, has made it very open 
for modification.  Fortunately Caden knew how to use Minecraft so we could see our 
modifications in action.  We did stuff like spawning lots of dragons based on certain
events.  It was a hit, very visual.&lt;/p&gt;

&lt;h3&gt;Arduino&lt;/h3&gt;

&lt;p&gt;Finally we did a session on &lt;a href=&quot;https://www.arduino.cc/&quot;&gt;Arduino&lt;/a&gt;.  The kids were given 
kits whith lots of resistors, LEDs, a bread board, an Arduino board and some other small
pieces.  We installed wires, LEDs, a switch, a dimmer and a resistor on the breadboard and
saw an LED light up.  After that we hooked the breadboard up to an Arduino, wrote a little
code to control the LED and we saw it work.  I have to say for Ryder it really clicked, he
was amazed that software he wrote was running on a little piece of hardware.  I&amp;#39;ll get a
book on more Ardruino projects and more hardware, Ryder is excited.&lt;/p&gt;

&lt;h2&gt;Akka Workshop&lt;/h2&gt;

&lt;p&gt;I signed up for a 2 day workshop on building &lt;a href=&quot;http://www.reactivemanifesto.org/&quot;&gt;reactive&lt;/a&gt; systems with &lt;a href=&quot;http://akka.io/&quot;&gt;Akka&lt;/a&gt; in &lt;a href=&quot;http://scala-lang.org/&quot;&gt;Scala&lt;/a&gt;.  I saw
some code that reminded me when I used to say, &amp;quot;It&amp;#39;s shit like this Scala&amp;quot; a lot.  I 
previously read a book on Akka but I still think I got something out of the workshop.  The 
workshop went through the mechanics but I&amp;#39;d be interested more to see how you practically
organize your actors.  Are actors nouns in your domain?  Are they some representation of
work that needs to get done?  Perhaps they are things at the horizontal tiers of your
architecture like DAOs, managers or controllers.&lt;/p&gt;

&lt;h2&gt;Other Notable Talks&lt;/h2&gt;

&lt;p&gt;I saw a talk on microservices.  To me it just seems like a sensible (maybe more granular) 
SOA architecture.  The big innovation is containers I suppose.  Currently I see containers
as things I can bone up on if I think I need them to solve scaling problems, for now I don&amp;#39;t. &lt;/p&gt;

&lt;p&gt;A speaker with a Python background spoke about testing.  He said that dependency injection
promoted bad design.  That totally made me challenge my existing assumptions.  Just kidding
that made me embarrassed for him that he said it in public and on camera.&lt;/p&gt;

&lt;p&gt;The Twitter talk on Scala was good.  You hear so much about Scala at Twitter but he said that
35% of their code was Scala, I guess they have lots of Java as well.  They sure seem to take
&amp;#39;on boarding&amp;#39; engineers to a whole other level.&lt;/p&gt;

&lt;p&gt;A talk on Design with Akka was good.  I wish there was less time spent on background as 
opposed to how you would structure your actors within a given business domain. &lt;/p&gt;

&lt;p&gt;Other talks were on getting the most out of GitHub, remote working, IPython Notebook for data
science, keeping architecture simple.&lt;/p&gt;

&lt;h2&gt;Zeitgeist of OSCON 2015&lt;/h2&gt;

&lt;p&gt;This stuff is all the sexy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://martinfowler.com/articles/microservices.html&quot;&gt;Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.reactivemanifesto.org/&quot;&gt;Reactive Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also talked to a lot of people that are working remote or are hiring remote workers.  Maybe
this is like when you buy a model of car you start to notice a lot of that model on the 
roads.  It could also be wishful thinking.  I&amp;#39;ve been remote for 3 years, I like it and 
I&amp;#39;d like to think it&amp;#39;s the future.&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/24/oscon-2015.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/24/oscon-2015.html</guid>
        
        
      </item>
    
      <item>
        <title>Pacific Coast Of Oregon</title>
        <description>&lt;p&gt;We did Florida for a week.  Then we were home in Louisiana for a couple weeks.  Then the whole family
took a trip to the Pacific Northwest to see the coast.&lt;/p&gt;

&lt;p&gt;After flying into Portland we drove to Lincoln City.  Great access to the beach, the boys saw the Pacific 
Ocean for the first time.  We went to the &lt;a href=&quot;http://aquarium.org/&quot;&gt;Oregon Coast Aquarium&lt;/a&gt; in Newport.  Then 
we went whale watching.  We saw whales come up for air but we didn&amp;#39;t see any tails.  The Pacific was choppy.&lt;/p&gt;

&lt;p&gt;Then we set off for Cannon Beach.  On the way we went to the &lt;a href=&quot;https://www.tillamook.com/&quot;&gt;Tilamook Cheese Factory&lt;/a&gt;.  We 
got to see how cheese was made and sampled some.  Not a destination you&amp;#39;d want to migrate to but it was on the way.  On to
Cannon Beach, this is where you can get to &lt;a href=&quot;https://en.wikipedia.org/wiki/Haystack_Rock&quot;&gt;Haystack Rock&lt;/a&gt;.  It&amp;#39;s a very iconic, huge rock
sticking out of the beach.  It&amp;#39;s very picturesque but pictures don&amp;#39;t do it justice.  While we were there we 
saw a rescue.  I included it in the home video.&lt;/p&gt;

&lt;p&gt;After that we went to Astoria.  That&amp;#39;s where &lt;a href=&quot;http://www.imdb.com/title/tt0089218/&quot;&gt;The Goonies&lt;/a&gt; was 
filmed.  We walked to the house featured in the movie and Bodhi did the truffle shuffle.  It&amp;#39;s a 
quaint sea side town that time forgot.  It also has &lt;a href=&quot;http://www.crmm.org/&quot;&gt;The Columbia River Maritime Museum&lt;/a&gt;, we 
learned about shipping, boats and what the Coast Guard does.  We were able to tour a retired Coast Guard vessel
that was used to just be a light-house off the coast.  That&amp;#39;d be some boring duty.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/y1OfJDxU9FE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 20 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/20/pacific-coast-of-oregon.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/20/pacific-coast-of-oregon.html</guid>
        
        
      </item>
    
      <item>
        <title>Pensacola Beach 2015</title>
        <description>&lt;p&gt;This is our 3rd year of going to Pensacola Beach, Florida.  &lt;a href=&quot;https://www.youtube.com/watch?v=UeE9oYN1OjY&quot;&gt;Here&amp;#39;s the video of our 2014 trip&lt;/a&gt;.
We usually do another trip besides this but this is our lazy trip, we set expectations very low.
We&amp;#39;ll go to the beach, go to the pool, take a nap, get something to eat.  The beaches are great
and it&amp;#39;s a 6 hour drive from home in Louisiana.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/OZJ3Nqas3K0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;The water was more choppy than what I remember previously.  There were not jellyfish to zap us, mustn&amp;#39;t be
in season.  This is the first year that Bodhi can swim entirely on his own.  He&amp;#39;s a real strong swimmer.  When
last season ended he wasn&amp;#39;t quite there.  We got to the pool a lot early this Summer and he picked right
back up where he was and quickly got more confidence in swimming.&lt;/p&gt;

&lt;iframe src=&quot;https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d220344.29631034881!2d-87.05139615000002!3d30.354370650000007!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8890dad848d85a0d%3A0x687b7b80ca21169e!2sPensacola+Beach%2C+FL!5e0!3m2!1sen!2sus!4v1436616543660&quot; width=&quot;600&quot; height=&quot;450&quot; frameborder=&quot;0&quot; style=&quot;border:0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 11 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/11/pensacola-beach-2015.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/11/pensacola-beach-2015.html</guid>
        
        
      </item>
    
      <item>
        <title>The Obstacle Is The Way</title>
        <description>&lt;p&gt;This quote isn&amp;#39;t in the book, perhaps it was delivered too recent to make it in.  But it&amp;#39;s a great quote by
&lt;a href=&quot;https://en.wikipedia.org/wiki/Nassim_Nicholas_Taleb&quot;&gt;Nassim Nicholas Taleb&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Stoic is someone who transforms fear into prudence, 
pain into transformation, 
mistakes into initiation, 
and desire into undertaking.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first book on stoicism that I read was  &lt;a href=&quot;http://www.amazon.com/Guide-Good-Life-Ancient-Stoic/dp/0195374614&quot;&gt;A Guide to the Good Life: The Ancient Art of Stoic Joy&lt;/a&gt;.  In a sentence I&amp;#39;d say that it&amp;#39;s a 
gentle introduction to stoicism purposefully written from a modern perspective with a good amount
of history on the roots of stoicism.&lt;/p&gt;

&lt;p&gt;The second book on stoicism that I more recently finished is called &lt;a href=&quot;http://www.amazon.com/The-Obstacle-Is-Way-Timeless/dp/1591846358&quot;&gt;The Obstacle is the Way&lt;/a&gt; by Ryan Holiday.&lt;/p&gt;

&lt;p&gt;The pattern seen throughout the book is to observe someone in business, military, politics or sport that has
done something that is an example of the stoic approach toward life.  It&amp;#39;s not always someone
who is a practicing stoic or who has read the stoics.  However the author does name notable people that
have read the stoics or claim that stoic thought has helped in their life, some of them are surprising.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a good book to consider how stoicism has helped and can help people achieve great things and deal with
adversity.&lt;/p&gt;

&lt;h3&gt;Where Now&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s time to get to the original sources so up next I&amp;#39;ll read &lt;a href=&quot;http://www.amazon.com/Meditations-Marcus-Aurelius-ebook/dp/B0082XJGRK/ref=sr_1_3?s=books&amp;amp;ie=UTF8&amp;amp;qid=1436189090&amp;amp;sr=1-3&amp;amp;keywords=marcus+aurelius+meditations&quot;&gt;Meditations&lt;/a&gt; by &lt;a href=&quot;https://en.wikipedia.org/wiki/Marcus_Aurelius&quot;&gt;Marcus Aurelius&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/06/the-obstacle-is-the-way.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/06/the-obstacle-is-the-way.html</guid>
        
        
      </item>
    
      <item>
        <title>Stupid Java8 Trick</title>
        <description>&lt;p&gt;Alright this isn&amp;#39;t much but I&amp;#39;m satisfied with myself and it surprisingly took me a
little bit to push the right buttons to make it work.&lt;/p&gt;

&lt;p&gt;I use EasyMock in my unit tests in Java8.  Mocking frameworks will typically have a
recording phase and then a phase where your expectations should be ready to play back.
With EasyMock your unit test can extend &lt;code&gt;EasyMockSupport&lt;/code&gt;.  That class gives you access
to methods like &lt;code&gt;replayAll()&lt;/code&gt; and &lt;code&gt;verifyAll()&lt;/code&gt;.  &lt;/p&gt;

&lt;h2&gt;Before&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// a bunch of expects&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;replayAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Inter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ageFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;verifyAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;After&lt;/h2&gt;

&lt;p&gt;This isn&amp;#39;t as smooth as you&amp;#39;d see in Scala or Groovy but in Java8 you can do something like this.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MySupport&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EasyMockSupport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runnableIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;replayAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runnableIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;verifyAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;replayAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;verifyAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I think I need both versions of &lt;code&gt;withMocks&lt;/code&gt;.  The first one handles when you are testing a method that doesn&amp;#39;t
return anything and the second one handles when your method does return something.  One of the 
things that gave me trouble was figuring out what interface in &lt;code&gt;java.util.function&lt;/code&gt; would not 
return any value.  Of course the answer is our old friend &lt;code&gt;Runnable&lt;/code&gt;.  I also struggled with 
what Java wanted for the generics, that stuff isn&amp;#39;t obvious to me.&lt;/p&gt;

&lt;p&gt;Then your test extends &lt;code&gt;MySupport&lt;/code&gt;.  And within your tests you can have code that looks like this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// a bunch of expects&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ageFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Caveat&lt;/h2&gt;

&lt;p&gt;This tightens up unit tests but I did run into a caveat that I should mention.  If the constructor for
your &lt;em&gt;class under test&lt;/em&gt; uses mocks that would need to be between the &lt;code&gt;replayAll()&lt;/code&gt; and &lt;code&gt;verifyAll()&lt;/code&gt; 
methods then you might want to create a method in your test that instantiates your &lt;em&gt;class under test&lt;/em&gt;.
It might look something like this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AgeFinder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createAgeFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AgeFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mockDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// a bunch of expects&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createAgeFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Tue, 30 Jun 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/programming/2015/06/30/stupid-java8-trick.html</link>
        <guid isPermaLink="true">http://neidetcher.com/programming/2015/06/30/stupid-java8-trick.html</guid>
        
        <category>programming</category>
        
        <category>java8</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
