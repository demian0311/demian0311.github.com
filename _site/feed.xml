<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Demian Neidetcher</title>
    <description>I&#39;m a software engineer, primarily working with JVM languages and in the telecommunications domain.
</description>
    <link>http://neidetcher.com/</link>
    <atom:link href="http://neidetcher.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 19 Aug 2015 18:59:33 -0500</pubDate>
    <lastBuildDate>Wed, 19 Aug 2015 18:59:33 -0500</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Spring Mvc Exception Handler</title>
        <description>&lt;p&gt;This is probably so obvious that it doesn&amp;#39;t deserve a blog post by anyone
but I&amp;#39;ll admit that I struggled with this for a few hours.  I have an API 
that I am putting together for a &lt;a href=&quot;http://martinfowler.com/articles/microservices.html&quot;&gt;microservice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a little JSON API and SpringMVC makes it very easy.  But when there
are exceptions most of the guides I found send you towards a &lt;a href=&quot;http://www.thymeleaf.org/&quot;&gt;Thymeleaf&lt;/a&gt; solution
that outputs HTML.  That&amp;#39;s not what I want, I want a good HTTP response code
and a JSON response that the client can parse to help them figure out what
went wrong.  There&amp;#39;s a great write-up on &lt;a href=&quot;https://spring.io/blog/2013/11/01/exception-handling-in-spring-mvc&quot;&gt;exception handling in Spring&lt;/a&gt; but that, I believe, takes you in the Thymeleaf direction as well.&lt;/p&gt;

&lt;h2&gt;My Custom Exception&lt;/h2&gt;

&lt;p&gt;Maybe this has my code too tied to HTTP but I like the explicit nature.  Notice
the &lt;code&gt;ResponseStatus&lt;/code&gt; annotation that provides what &lt;code&gt;HttpStatus&lt;/code&gt; we want associated
with this exception.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;package foo.bar;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ResponseStatus;

@ResponseStatus(value = HttpStatus.BAD_REQUEST)
public class BadRequestException extends RuntimeException {

    public BadRequestException(String messageIn) {
        super(messageIn);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Using the Exception&lt;/h2&gt;

&lt;p&gt;Nothing shocking here.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;throw new BadRequestException(&amp;quot;something descriptive goes here&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;ExceptionHandler&lt;/h2&gt;

&lt;p&gt;Spring lets you just annotate a method on a controller that you have designated to 
handle exceptions.  So yeah, this is the part that wasn&amp;#39;t obvious to me.  Sending 
back a &lt;code&gt;Map&lt;/code&gt; tells Spring to just turn it into good JSON.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;exceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletResponseIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// if not production then show stack trace?&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;StringBuffer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queryString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQueryString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queryString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;requestUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isAnnotationPresent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ResponseStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnnotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;responseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;httpStatus&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;httpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getReasonPhrase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;httpServletResponseIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This all produces JSON that looks like this along with an HTTP response code of 400.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;requestUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost:8080/controller&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;httpStatus&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bad Request&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;something descriptive goes here&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Wed, 19 Aug 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/programming/2015/08/19/spring-mvc-exception-handler.html</link>
        <guid isPermaLink="true">http://neidetcher.com/programming/2015/08/19/spring-mvc-exception-handler.html</guid>
        
        <category>programming</category>
        
        <category>java8</category>
        
        <category>spring</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Seattle</title>
        <description>&lt;p&gt;After driving up the &lt;a href=&quot;/2015/07/20/pacific-coast-of-oregon.html&quot;&gt;Pacific Coast of Oregon&lt;/a&gt; and before going
to &lt;a href=&quot;/2015/07/24/oscon-2015.html&quot;&gt;OSCON in Portland&lt;/a&gt; we took a few days to see Seattle.&lt;/p&gt;

&lt;p&gt;Once we got settled in the room we drove downtown to catch a ferry ride 
to &lt;a href=&quot;http://www.argosycruises.com/tillicum-village/&quot;&gt;Tillicum Village&lt;/a&gt;.  Once
we got off the ferry they gave us a mug of steamed clams.  I nibbled on a bit, Ryder liked
them a lot.  After that you make your way to have a nice dinner of smoked salmon.  I
generally don&amp;#39;t like fish but I tried the salmon, it was good, I can see the appeal.  Then
they put on a show of dances and talk about local native American mythology.  After that 
you hang out and get back on the boats.&lt;/p&gt;

&lt;p&gt;The next day we drove down to &lt;a href=&quot;http://www.pikeplacemarket.org/&quot;&gt;Pike Place Market&lt;/a&gt;.  That&amp;#39;s where 
the fish market is.  We walked through that, it was crowded and touristy.  The fish mongers 
were nice, great ambassadors to the city.  We also went to 
the first Starbucks.  No video of that, the only thing different between that and other Starbucks
is that the line took 40 minutes instead of 10 minutes.&lt;/p&gt;

&lt;p&gt;Then we went to the Seattle &lt;a href=&quot;http://www.empmuseum.org/&quot;&gt;EMP Museum&lt;/a&gt;.  I guess
you could say it&amp;#39;s a museum dedicated to contemporary culture.  There was a Star Wars costume 
exibit with many original costumes from the movies.&lt;/p&gt;

&lt;p&gt;Besides that there was an exhibit on indy games.  I&amp;#39;m not much of a gamer but it was fun to
see the visual things indy game creators are doing.  The kids had fun playing the games.&lt;/p&gt;

&lt;p&gt;Then we went up the &lt;a href=&quot;http://www.spaceneedle.com/&quot;&gt;Space Needle&lt;/a&gt;.  It was confusing, 
we tried to get tickets and they said
they were sold out until 10PM.  Courtney managed to ask around and get reservations for the 
restaurant up there almost immediately and after you eat you can hang around on the observation
deck.  So it worked out great, the restaurant spins around once every 50 minutes.&lt;/p&gt;

&lt;p&gt;Finally on our way to Portland we stopped off at &lt;a href=&quot;http://crystalmountainresort.com/summer/summer-activities/scenic-gondola-rides/&quot;&gt;Crystal Mountain&lt;/a&gt; to 
take a gondola ride up for a view of Mt Rainier and Mt St Helens.  We had lunch at a nice restaurant
at the top of the life and took in the views, great detour.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; 
src=&quot;https://www.youtube.com/embed/LEPHH8ZndYo&quot; 
frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 25 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/25/seattle.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/25/seattle.html</guid>
        
        
      </item>
    
      <item>
        <title>Oscon 2015</title>
        <description>&lt;p&gt;I went to &lt;a href=&quot;http://www.oscon.com/&quot;&gt;OSCON&lt;/a&gt; this year.  It&amp;#39;s a conference for opensource put 
on by &lt;a href=&quot;http://www.oreilly.com/&quot;&gt;O&amp;#39;Reilly&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Kids Day&lt;/h2&gt;

&lt;p&gt;I took my 17 year old son, Caden and my 8 year old son Ryder.  &lt;/p&gt;

&lt;h3&gt;Python&lt;/h3&gt;

&lt;p&gt;The first session was on
Python.  Python is a great language to start out with.  I like Python a lot, it was the
first language I used professionall after COBOL.  They had a good curriculum set up for 
us.  We did a series of games where we accepted input, tried to guess a number and 
whatnot.  Ryder had lots of fun playing the game.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;float: right&quot; src=&quot;https://i.imgur.com/wIFL6Vxm.jpg&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Modding Minecraft&lt;/h3&gt;

&lt;p&gt;The second session was modding &lt;a href=&quot;https://minecraft.net/&quot;&gt;Minecraft&lt;/a&gt; 
with &lt;a href=&quot;http://files.minecraftforge.net/&quot;&gt;Forge&lt;/a&gt;.  We don&amp;#39;t run Minecraft at home yet, we
probably will in the next year.  Minecraft is written in Java and the 
author, &lt;a href=&quot;https://en.wikipedia.org/wiki/Markus_Persson&quot;&gt;Notch&lt;/a&gt;, has made it very open 
for modification.  Fortunately Caden knew how to use Minecraft so we could see our 
modifications in action.  We did stuff like spawning lots of dragons based on certain
events.  It was a hit, very visual.&lt;/p&gt;

&lt;h3&gt;Arduino&lt;/h3&gt;

&lt;p&gt;Finally we did a session on &lt;a href=&quot;https://www.arduino.cc/&quot;&gt;Arduino&lt;/a&gt;.  The kids were given 
kits whith lots of resistors, LEDs, a bread board, an Arduino board and some other small
pieces.  We installed wires, LEDs, a switch, a dimmer and a resistor on the breadboard and
saw an LED light up.  After that we hooked the breadboard up to an Arduino, wrote a little
code to control the LED and we saw it work.  I have to say for Ryder it really clicked, he
was amazed that software he wrote was running on a little piece of hardware.  I&amp;#39;ll get a
book on more Ardruino projects and more hardware, Ryder is excited.&lt;/p&gt;

&lt;h2&gt;Akka Workshop&lt;/h2&gt;

&lt;p&gt;I signed up for a 2 day workshop on building &lt;a href=&quot;http://www.reactivemanifesto.org/&quot;&gt;reactive&lt;/a&gt; systems with &lt;a href=&quot;http://akka.io/&quot;&gt;Akka&lt;/a&gt; in &lt;a href=&quot;http://scala-lang.org/&quot;&gt;Scala&lt;/a&gt;.  I saw
some code that reminded me when I used to say, &amp;quot;It&amp;#39;s shit like this Scala&amp;quot; a lot.  I 
previously read a book on Akka but I still think I got something out of the workshop.  The 
workshop went through the mechanics but I&amp;#39;d be interested more to see how you practically
organize your actors.  Are actors nouns in your domain?  Are they some representation of
work that needs to get done?  Perhaps they are things at the horizontal tiers of your
architecture like DAOs, managers or controllers.&lt;/p&gt;

&lt;h2&gt;Other Notable Talks&lt;/h2&gt;

&lt;p&gt;I saw a talk on microservices.  To me it just seems like a sensible (maybe more granular) 
SOA architecture.  The big innovation is containers I suppose.  Currently I see containers
as things I can bone up on if I think I need them to solve scaling problems, for now I don&amp;#39;t. &lt;/p&gt;

&lt;p&gt;A speaker with a Python background spoke about testing.  He said that dependency injection
promoted bad design.  That totally made me challenge my existing assumptions.  Just kidding
that made me embarrassed for him that he said it in public and on camera.&lt;/p&gt;

&lt;p&gt;The Twitter talk on Scala was good.  You hear so much about Scala at Twitter but he said that
35% of their code was Scala, I guess they have lots of Java as well.  They sure seem to take
&amp;#39;on boarding&amp;#39; engineers to a whole other level.&lt;/p&gt;

&lt;p&gt;A talk on Design with Akka was good.  I wish there was less time spent on background as 
opposed to how you would structure your actors within a given business domain. &lt;/p&gt;

&lt;p&gt;Other talks were on getting the most out of GitHub, remote working, IPython Notebook for data
science, keeping architecture simple.&lt;/p&gt;

&lt;h2&gt;Zeitgeist of OSCON 2015&lt;/h2&gt;

&lt;p&gt;This stuff is all the sexy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://martinfowler.com/articles/microservices.html&quot;&gt;Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.reactivemanifesto.org/&quot;&gt;Reactive Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also talked to a lot of people that are working remote or are hiring remote workers.  Maybe
this is like when you buy a model of car you start to notice a lot of that model on the 
roads.  It could also be wishful thinking.  I&amp;#39;ve been remote for 3 years, I like it and 
I&amp;#39;d like to think it&amp;#39;s the future.&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/24/oscon-2015.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/24/oscon-2015.html</guid>
        
        
      </item>
    
      <item>
        <title>Pacific Coast Of Oregon</title>
        <description>&lt;p&gt;We did Florida for a week.  Then we were home in Louisiana for a couple weeks.  Then the whole family
took a trip to the Pacific Northwest to see the coast.&lt;/p&gt;

&lt;p&gt;After flying into Portland we drove to Lincoln City.  Great access to the beach, the boys saw the Pacific 
Ocean for the first time.  We went to the &lt;a href=&quot;http://aquarium.org/&quot;&gt;Oregon Coast Aquarium&lt;/a&gt; in Newport.  Then 
we went whale watching.  We saw whales come up for air but we didn&amp;#39;t see any tails.  The Pacific was choppy.&lt;/p&gt;

&lt;p&gt;Then we set off for Cannon Beach.  On the way we went to the &lt;a href=&quot;https://www.tillamook.com/&quot;&gt;Tilamook Cheese Factory&lt;/a&gt;.  We 
got to see how cheese was made and sampled some.  Not a destination you&amp;#39;d want to migrate to but it was on the way.  On to
Cannon Beach, this is where you can get to &lt;a href=&quot;https://en.wikipedia.org/wiki/Haystack_Rock&quot;&gt;Haystack Rock&lt;/a&gt;.  It&amp;#39;s a very iconic, huge rock
sticking out of the beach.  It&amp;#39;s very picturesque but pictures don&amp;#39;t do it justice.  While we were there we 
saw a rescue.  I included it in the home video.&lt;/p&gt;

&lt;p&gt;After that we went to Astoria.  That&amp;#39;s where &lt;a href=&quot;http://www.imdb.com/title/tt0089218/&quot;&gt;The Goonies&lt;/a&gt; was 
filmed.  We walked to the house featured in the movie and Bodhi did the truffle shuffle.  It&amp;#39;s a 
quaint sea side town that time forgot.  It also has &lt;a href=&quot;http://www.crmm.org/&quot;&gt;The Columbia River Maritime Museum&lt;/a&gt;, we 
learned about shipping, boats and what the Coast Guard does.  We were able to tour a retired Coast Guard vessel
that was used to just be a light-house off the coast.  That&amp;#39;d be some boring duty.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/y1OfJDxU9FE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 20 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/20/pacific-coast-of-oregon.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/20/pacific-coast-of-oregon.html</guid>
        
        
      </item>
    
      <item>
        <title>Pensacola Beach 2015</title>
        <description>&lt;p&gt;This is our 3rd year of going to Pensacola Beach, Florida.  &lt;a href=&quot;https://www.youtube.com/watch?v=UeE9oYN1OjY&quot;&gt;Here&amp;#39;s the video of our 2014 trip&lt;/a&gt;.
We usually do another trip besides this but this is our lazy trip, we set expectations very low.
We&amp;#39;ll go to the beach, go to the pool, take a nap, get something to eat.  The beaches are great
and it&amp;#39;s a 6 hour drive from home in Louisiana.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/OZJ3Nqas3K0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;The water was more choppy than what I remember previously.  There were not jellyfish to zap us, mustn&amp;#39;t be
in season.  This is the first year that Bodhi can swim entirely on his own.  He&amp;#39;s a real strong swimmer.  When
last season ended he wasn&amp;#39;t quite there.  We got to the pool a lot early this Summer and he picked right
back up where he was and quickly got more confidence in swimming.&lt;/p&gt;

&lt;iframe src=&quot;https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d220344.29631034881!2d-87.05139615000002!3d30.354370650000007!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8890dad848d85a0d%3A0x687b7b80ca21169e!2sPensacola+Beach%2C+FL!5e0!3m2!1sen!2sus!4v1436616543660&quot; width=&quot;600&quot; height=&quot;450&quot; frameborder=&quot;0&quot; style=&quot;border:0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 11 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/11/pensacola-beach-2015.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/11/pensacola-beach-2015.html</guid>
        
        
      </item>
    
      <item>
        <title>The Obstacle Is The Way</title>
        <description>&lt;p&gt;This quote isn&amp;#39;t in the book, perhaps it was delivered too recent to make it in.  But it&amp;#39;s a great quote by
&lt;a href=&quot;https://en.wikipedia.org/wiki/Nassim_Nicholas_Taleb&quot;&gt;Nassim Nicholas Taleb&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Stoic is someone who transforms fear into prudence, 
pain into transformation, 
mistakes into initiation, 
and desire into undertaking.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first book on stoicism that I read was  &lt;a href=&quot;http://www.amazon.com/Guide-Good-Life-Ancient-Stoic/dp/0195374614&quot;&gt;A Guide to the Good Life: The Ancient Art of Stoic Joy&lt;/a&gt;.  In a sentence I&amp;#39;d say that it&amp;#39;s a 
gentle introduction to stoicism purposefully written from a modern perspective with a good amount
of history on the roots of stoicism.&lt;/p&gt;

&lt;p&gt;The second book on stoicism that I more recently finished is called &lt;a href=&quot;http://www.amazon.com/The-Obstacle-Is-Way-Timeless/dp/1591846358&quot;&gt;The Obstacle is the Way&lt;/a&gt; by Ryan Holiday.&lt;/p&gt;

&lt;p&gt;The pattern seen throughout the book is to observe someone in business, military, politics or sport that has
done something that is an example of the stoic approach toward life.  It&amp;#39;s not always someone
who is a practicing stoic or who has read the stoics.  However the author does name notable people that
have read the stoics or claim that stoic thought has helped in their life, some of them are surprising.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a good book to consider how stoicism has helped and can help people achieve great things and deal with
adversity.&lt;/p&gt;

&lt;h3&gt;Where Now&lt;/h3&gt;

&lt;p&gt;It&amp;#39;s time to get to the original sources so up next I&amp;#39;ll read &lt;a href=&quot;http://www.amazon.com/Meditations-Marcus-Aurelius-ebook/dp/B0082XJGRK/ref=sr_1_3?s=books&amp;amp;ie=UTF8&amp;amp;qid=1436189090&amp;amp;sr=1-3&amp;amp;keywords=marcus+aurelius+meditations&quot;&gt;Meditations&lt;/a&gt; by &lt;a href=&quot;https://en.wikipedia.org/wiki/Marcus_Aurelius&quot;&gt;Marcus Aurelius&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/2015/07/06/the-obstacle-is-the-way.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/07/06/the-obstacle-is-the-way.html</guid>
        
        
      </item>
    
      <item>
        <title>Stupid Java8 Trick</title>
        <description>&lt;p&gt;Alright this isn&amp;#39;t much but I&amp;#39;m satisfied with myself and it surprisingly took me a
little bit to push the right buttons to make it work.&lt;/p&gt;

&lt;p&gt;I use EasyMock in my unit tests in Java8.  Mocking frameworks will typically have a
recording phase and then a phase where your expectations should be ready to play back.
With EasyMock your unit test can extend &lt;code&gt;EasyMockSupport&lt;/code&gt;.  That class gives you access
to methods like &lt;code&gt;replayAll()&lt;/code&gt; and &lt;code&gt;verifyAll()&lt;/code&gt;.  &lt;/p&gt;

&lt;h2&gt;Before&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// a bunch of expects&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;replayAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Inter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ageFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;verifyAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;After&lt;/h2&gt;

&lt;p&gt;This isn&amp;#39;t as smooth as you&amp;#39;d see in Scala or Groovy but in Java8 you can do something like this.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MySupport&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EasyMockSupport&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runnableIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;replayAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runnableIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;verifyAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;replayAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;verifyAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I think I need both versions of &lt;code&gt;withMocks&lt;/code&gt;.  The first one handles when you are testing a method that doesn&amp;#39;t
return anything and the second one handles when your method does return something.  One of the 
things that gave me trouble was figuring out what interface in &lt;code&gt;java.util.function&lt;/code&gt; would not 
return any value.  Of course the answer is our old friend &lt;code&gt;Runnable&lt;/code&gt;.  I also struggled with 
what Java wanted for the generics, that stuff isn&amp;#39;t obvious to me.&lt;/p&gt;

&lt;p&gt;Then your test extends &lt;code&gt;MySupport&lt;/code&gt;.  And within your tests you can have code that looks like this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// a bunch of expects&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ageFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Caveat&lt;/h2&gt;

&lt;p&gt;This tightens up unit tests but I did run into a caveat that I should mention.  If the constructor for
your &lt;em&gt;class under test&lt;/em&gt; uses mocks that would need to be between the &lt;code&gt;replayAll()&lt;/code&gt; and &lt;code&gt;verifyAll()&lt;/code&gt; 
methods then you might want to create a method in your test that instantiates your &lt;em&gt;class under test&lt;/em&gt;.
It might look something like this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AgeFinder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createAgeFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AgeFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mockDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// a bunch of expects&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withMocks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;createAgeFinder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Tue, 30 Jun 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/programming/2015/06/30/stupid-java8-trick.html</link>
        <guid isPermaLink="true">http://neidetcher.com/programming/2015/06/30/stupid-java8-trick.html</guid>
        
        <category>programming</category>
        
        <category>java8</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Hystrix Circuit Breaker With Java8</title>
        <description>&lt;p&gt;It&amp;#39;ll continue to be interesting to see what happens with Java8.  Sure the version is
out there, you can write all the lambdas you want.  But it&amp;#39;s going to get more fun
to see how every day coders use it and how library authors use it.&lt;/p&gt;

&lt;p&gt;During the day I use Groovy, enjoy it&amp;#39;s closures.  I still do a bit of Scala but not as
much as I&amp;#39;d like.  But at night I&amp;#39;ve been working with Java8.  &lt;/p&gt;

&lt;h2&gt;Generic Hystrix Circuit Breaker&lt;/h2&gt;

&lt;p&gt;From what I understand you should encapsulate the code that talks to remote systems 
inside of a class that implements a HystrixCommand.  I had a situation where there 
were a lot of little calls to a back-end system.  Creating new classes for each call 
was getting tedious.  So I endeavored to create a generic circuit breaker 
(implementation of HystrixCommand) for each dependent system.  &lt;/p&gt;

&lt;p&gt;You just give it 2 suppliers, one for the actual thing you&amp;#39;re trying to do and another 
as a fallback if what you&amp;#39;re trying to do fails.  The suppliers have to adhere to the 
normal contract with circuit breakers.  If an exception bubbles up from one of your 
lambdas then the circuit breaker trips.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DatabaseCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HystrixCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runSupplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fallbackSupplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DatabaseCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runSupplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fallbackSupplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommandProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSetter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CommandProvider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DB_COMMAND_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;runSupplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runSupplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fallbackSupplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fallbackSupplierIn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runSupplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getFallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fallbackSupplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There&amp;#39;s some hand waving with the &lt;code&gt;CommandProvider.getSetter()&lt;/code&gt;, that&amp;#39;s the 
monster set of calls where you configure your circuit breaker. &lt;/p&gt;

&lt;h2&gt;Using it&lt;/h2&gt;

&lt;p&gt;Then when you want to use the circuit breaker it looks something like this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;DatabaseCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Customer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DatabaseCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findCustomer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;customerId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findCustomerFromCache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findCustomerId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databaseCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This isn&amp;#39;t so bad.  Sure it&amp;#39;s convenient that I have those suppliers wrapped inside
of functions already so I don&amp;#39;t have nasty multi-line lambdas.&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Jun 2015 00:00:00 -0500</pubDate>
        <link>http://neidetcher.com/programming/2015/06/03/hystrix-circuit-breaker-with-java8.html</link>
        <guid isPermaLink="true">http://neidetcher.com/programming/2015/06/03/hystrix-circuit-breaker-with-java8.html</guid>
        
        <category>programming</category>
        
        <category>java8</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>A Guide To The Good Life</title>
        <description>&lt;p&gt;Raise your hand if your job title is &lt;em&gt;I work with assholes all day&lt;/em&gt;.  Wow, that was a lot, you might
want to read this book.  The full title of the book is &lt;a href=&quot;http://www.amazon.com/Guide-Good-Life-Ancient-Stoic/dp/0195374614&quot;&gt;A Guide to the Good Life: The Ancient Art of Stoic Joy&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Background&lt;/h2&gt;

&lt;p&gt;I have read blog posts and perused Wikipedia but this is the first book I have read on stoicism.  It 
probably doesn&amp;#39;t help that the word &lt;em&gt;Stoic&lt;/em&gt; is used commonly to refer to someone who seems without
emotion.  But for the un-initiated, stoicism is a Greek and Roman philosophy that is concerned with
minimizing bad emotions.  It&amp;#39;s different in that is very practical, it&amp;#39;s not very abstract.  It&amp;#39;s
better to think of it as a set of tools that help you navigate your day and your life with minimal
negative thoughts like jealousy, anxiety, anger and so on.&lt;/p&gt;

&lt;p&gt;Like so many topics I think I gravitated towards this because instead of showing me something I 
never thought of before it more codifies an approach or ideology I already have.  There&amp;#39;s a lot
of value in firming up your existing beliefs but it&amp;#39;s good to be aware of the selection bias that
you have.&lt;/p&gt;

&lt;h2&gt;The Book&lt;/h2&gt;

&lt;p&gt;The book covers the history of stoicism.  That was interesting although some notable Stoics seemed
to die early.  That might not be encouraging when you&amp;#39;re browsing for philosophies.&lt;/p&gt;

&lt;p&gt;It goes on to cover some techniques to help you in your daily life.  The author doesn&amp;#39;t hide the
fact that he is interpreting original Stoic literature for us and applying it to modern life.  It&amp;#39;s 
not a big book, seems to be a great introduction overall to the philosophy.&lt;/p&gt;

&lt;h2&gt;Some Techniques&lt;/h2&gt;

&lt;h3&gt;Negative Visualization&lt;/h3&gt;

&lt;p&gt;If you&amp;#39;ve ever reasoned &lt;em&gt;what is the worst that could happen&lt;/em&gt; to get yourself through something then
you have practiced negative visualization.  For example if you have anxiety about entirely losing your
livelyhood you could imagine living with family.  Maybe that wouldn&amp;#39;t be so bad, maybe you&amp;#39;d connect
more than you would have otherwise.  Alright, perhaps a bad example but you get the idea.  There are
other variations on this theme but that&amp;#39;s the gist.&lt;/p&gt;

&lt;h3&gt;Dichotomy of Control&lt;/h3&gt;

&lt;p&gt;If you&amp;#39;ve ever read the Serenity Prayer you&amp;#39;re familiar with this Stoic principle.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;God, grant me the serenity to accept the things I cannot change,
The courage to change the things I can,
And the wisdom to know the difference.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;#39;s really about working through the things that you can absolutely control (the thoughts in your
mind), the things you sort of control (your actions) and the things you absolutely don&amp;#39;t control which
is pretty much everything else in the world.  There&amp;#39;s much more useful subtlety in the book.&lt;/p&gt;

&lt;h3&gt;Fatalism for the Past&lt;/h3&gt;

&lt;p&gt;Stoics also seem to practice a kind of fatalism on past events.  I guess this is just a function of
putting the past into the bucket of those things you can&amp;#39;t control.  So let it guide your decisions
but don&amp;#39;t dwell on it and don&amp;#39;t worry about it.&lt;/p&gt;

&lt;h2&gt;End Matter&lt;/h2&gt;

&lt;p&gt;You might think that all this would make someone apathetic towards life.  That&amp;#39;s not the case, 
Stoics seem to think you have a social duty based on your existence.  You should strive to be 
productive and have a positive influence on others.&lt;/p&gt;

&lt;p&gt;Still not sure, go read &lt;a href=&quot;https://en.wikiquote.org/wiki/Marcus_Aurelius&quot;&gt;some quotes from Marcus Aurelius&lt;/a&gt;.  He was the last big Stoic, a Roman
Emporer and apparently an alright guy.  His job description including having to work with assholes
all day.  These guys had it figured out, it&amp;#39;s cool something so old has a lot to offer in the 
present day.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Feb 2015 00:00:00 -0600</pubDate>
        <link>http://neidetcher.com/2015/02/19/a-guide-to-the-good-life.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/02/19/a-guide-to-the-good-life.html</guid>
        
        
      </item>
    
      <item>
        <title>Winter Reading</title>
        <description>&lt;h2&gt;MONEY Master the Game - Tony Robbins&lt;/h2&gt;

&lt;p&gt;I heard his interview on the &lt;a href=&quot;http://fourhourworkweek.com/blog/&quot;&gt;Tim Ferriss&lt;/a&gt; podcast and
decided to read the book.  30% bragging about who he has helped, 30% building up what he&amp;#39;s
going to tell you and then 30% on actual good, actionable personal financial advice.  Oh
also there is some cross-marketing of services that are promoted in the book that Tony 
Robbins I would assume benefits from.  It&amp;#39;s not in your face but it&amp;#39;s there.&lt;/p&gt;

&lt;p&gt;The premise of the book is that he saw so many people get wiped out in 2008 that he&amp;#39;s 
curious about what&amp;#39;s going on and what the common man can do to not get screwed again.
To this end he is able to get an audience with a lot of high performing financial guys.
He interviews them and gets some good information.&lt;/p&gt;

&lt;p&gt;The price of the book on Kindle was worth that 30%.  What I liked most was the allocations
that he gets.  The book has motivated to get more serious about retirement and allocations.
Otherwise, lots of sound advice.&lt;/p&gt;

&lt;h3&gt;Some take aways&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Just use low fee index funds that track the market in your 401k.&lt;/li&gt;
&lt;li&gt;Set up an annual increase plan to automatically bump your partipation percentage.&lt;/li&gt;
&lt;li&gt;His allocations split between US bonds, stocks, gold and commodities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Zero to One - Peter Thiel&lt;/h2&gt;

&lt;p&gt;Great book.  I found myself laughing a few times.  Peter Thiel is a highly successful 
entrepreneur and venture capitalist.  The book offers his perspective on what makes a 
good business from a lot of perspectives.  It challenges some conventional notions 
about what make good businesses.  The book also gives insight into how VCs operate and
evaluate companies they fund.&lt;/p&gt;

&lt;h3&gt;Some take aways&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The lionization of competition is not useful for business, a good business has a virtual monopoly.&lt;/li&gt;
&lt;li&gt;Good founders are outliers and should have a prior history. &lt;/li&gt;
&lt;li&gt;To be compelling, your offering should be a 10x improvement over your competition.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 15 Jan 2015 00:00:00 -0600</pubDate>
        <link>http://neidetcher.com/2015/01/15/winter-reading.html</link>
        <guid isPermaLink="true">http://neidetcher.com/2015/01/15/winter-reading.html</guid>
        
        
      </item>
    
  </channel>
</rss>
